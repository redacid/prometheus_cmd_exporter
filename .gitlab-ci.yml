before_script:
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
stages:
  - deploy

variables:
  sshOpts: "-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
  ServersForDeploy: "router.ra mx2.ra cs.ra"

deploy:
  stage: deploy
  tags:
    - golang
  script:
    - GOOS=linux GOARCH=amd64 go build -o prometheus-cmd-exporter main.go
    - set +x
    - eval $(ssh-agent -s)
    - echo "$COLLECTOR_PK" | tr -d '\r' | ssh-add -
    - ls -l
#    - >
#      for TargetServer in $ServersForDeploy
#        do
#        set -x
#        host $TargetServer
#        ssh $sshOpts root@"$TargetServer" "systemctl status prometheus-cmd-exporter || true"
#        ssh $sshOpts root@"$TargetServer" "systemctl stop prometheus-cmd-exporter || true"
#        ssh $sshOpts root@"$TargetServer" "mkdir -p /usr/bin/cmd-exporter || true"
#        scp $sshOpts ./cmd_exporter root@"$TargetServer":/usr/bin/cmd-exporter/prometheus-cmd-exporter
#        scp $sshOpts ./cicd-files/prometheus-cmd-exporter.service root@"$TargetServer":/lib/systemd/system/prometheus-cmd-exporter.service
#        ssh $sshOpts root@"$TargetServer" "systemctl daemon-reload || true"
#        ssh $sshOpts root@"$TargetServer" "systemctl enable prometheus-cmd-exporter.service || true"
#        ssh $sshOpts root@"$TargetServer" "systemctl start prometheus-cmd-exporter || true"
#        ssh $sshOpts root@"$TargetServer" "systemctl status prometheus-cmd-exporter || true"
#      done
